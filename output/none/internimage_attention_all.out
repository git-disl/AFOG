---------------------------------------
Begin Slurm Prolog: Oct-23-2024 18:44:43
Job ID:    881944
User ID:   zyahn3
Account:   scs
Job name:  TOG_Plus_InternImage
Partition: coc-gpu
---------------------------------------
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/condabin/conda
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/bin/conda
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/bin/conda-env
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/bin/activate
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/bin/deactivate
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/etc/profile.d/conda.sh
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/etc/fish/conf.d/conda.fish
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/shell/condabin/Conda.psm1
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/shell/condabin/conda-hook.ps1
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /usr/local/pace-apps/manual/packages/anaconda3/2023.03/etc/profile.d/conda.csh
no change     /home/hice1/zyahn3/.bashrc
No action taken.
/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detrex/layers/dcn_v3.py:23: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  @custom_fwd
/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detrex/layers/dcn_v3.py:52: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  @custom_bwd
[10/23 18:46:15 detectron2]: Rank of current process: 0. World size: 1
[10/23 18:46:17 detectron2]: Environment info:
-------------------------------  ----------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.12.4 | packaged by Anaconda, Inc. | (main, Jun 18 2024, 15:12:24) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2
Compiler                         GCC 12.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.1 @/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100 80GB PCIe (arch=8.0)
Driver version                   555.42.02
CUDA_HOME                        /usr/local/cuda
Pillow                           10.4.0
torchvision                      0.19.1 @/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ----------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.4
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.4, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/23 18:46:17 detectron2]: Command line arguments: Namespace(config_file='detrex/projects/dino/configs/dino-internimage/dino_internimage_large_4scale_12ep.py', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:53103', opts=['train.init_checkpoint=model_files/internimage.pth', 'attack=attention', 'attack_mode=untargeted', 'sample=0.005'])
[10/23 18:46:17 detectron2]: Contents of args.config_file=detrex/projects/dino/configs/dino-internimage/dino_internimage_large_4scale_12ep.py:
[38;5;204mfrom[39m[38;5;15m [39m[38;5;15mdetrex[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;204mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;204mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mmodels[39m[38;5;15m.[39m[38;5;15mdino_internimage[39m[38;5;15m [39m[38;5;204mimport[39m[38;5;15m [39m[38;5;15mmodel[39m

[38;5;245m# get default config[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/data/coco_detr.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mdataloader[39m
[38;5;15moptimizer[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/optim.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mAdamW[39m
[38;5;15mlr_multiplier[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/coco_schedule.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mlr_multiplier_12ep[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mtrain[39m

[38;5;245m# modify training config[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15minit_checkpoint[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m/path/to/internimage_l_22kto1k_384.pth[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/dino_internimage_large_384_4scale_12ep[39m[38;5;186m"[39m

[38;5;245m# max training iterations[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mmax_iter[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15meval_period[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mlog_period[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m20[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mcheckpointer[39m[38;5;204m.[39m[38;5;15mperiod[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m5000[39m

[38;5;245m# gradient clipping for training[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;81mTrue[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mmax_norm[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mnorm_type[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;245m# set training devices[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mdevice[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcuda[39m[38;5;186m"[39m
[38;5;15mmodel[39m[38;5;204m.[39m[38;5;15mdevice[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mdevice[39m

[38;5;245m# modify optimizer config[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mlr[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m1e-4[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mbetas[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15m([39m[38;5;141m0.9[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.999[39m[38;5;15m)[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mweight_decay[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m1e-4[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mlr_factor_func[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;81mlambda[39m[38;5;15m [39m[38;5;15mmodule_name[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m[38;5;15m [39m[38;5;81mif[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbackbone[39m[38;5;186m"[39m[38;5;15m [39m[38;5;204min[39m[38;5;15m [39m[38;5;15mmodule_name[39m[38;5;15m [39m[38;5;81melse[39m[38;5;15m [39m[38;5;141m1[39m

[38;5;245m# modify dataloader config[39m
[38;5;15mdataloader[39m[38;5;204m.[39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mnum_workers[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m16[39m

[38;5;245m# please notice that this is total batch size.[39m
[38;5;245m# surpose you're using 4 gpus for training and the batch size for[39m
[38;5;245m# each gpu is 16/4 = 4[39m
[38;5;15mdataloader[39m[38;5;204m.[39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mtotal_batch_size[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m16[39m

[38;5;15mattack[39m[38;5;204m=[39m[38;5;81mNone[39m
[38;5;15mattack_mode[39m[38;5;204m=[39m[38;5;81mNone[39m
[38;5;15msample[39m[38;5;204m=[39m[38;5;141m1.0[39m

WARNING [10/23 18:46:17 d2.config.lazy]: The config contains objects that cannot serialize to a valid yaml. ./output/dino_internimage_large_384_4scale_12ep/config.yaml is human-readable but cannot be loaded.
WARNING [10/23 18:46:17 d2.config.lazy]: Config is saved using cloudpickle at ./output/dino_internimage_large_384_4scale_12ep/config.yaml.pkl.
[10/23 18:46:17 detectron2]: Full config saved to ./output/dino_internimage_large_384_4scale_12ep/config.yaml
[10/23 18:46:17 d2.utils.env]: Using a generated random seed 18195604
[10/23 18:46:17 InternImage]: using core type: DCNv3
[10/23 18:46:17 InternImage]: using activation layer: GELU
[10/23 18:46:17 InternImage]: using main norm layer: LN
[10/23 18:46:17 InternImage]: using dpr: linear, 0.0
[10/23 18:46:17 InternImage]: level2_post_norm: False
[10/23 18:46:17 InternImage]: level2_post_norm_block_ids: None
[10/23 18:46:17 InternImage]: res_post_norm: False
[10/23 18:46:23 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from model_files/internimage.pth ...
[10/23 18:46:23 fvcore.common.checkpoint]: [Checkpointer] Loading from model_files/internimage.pth ...
/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/fvcore/common/checkpoint.py:252: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(f, map_location=torch.device("cpu"))
[10/23 18:46:26 detectron2]: Run evaluation under eval-only mode
[10/23 18:46:26 detectron2]: Run evaluation without EMA.
[10/23 18:46:27 d2.data.datasets.coco]: Loaded 5000 images in COCO format from datasets/coco/annotations/instances_val2017.json
[10/23 18:46:27 d2.data.build]: Distribution of instances among all 80 categories:
|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |
[10/23 18:46:27 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/23 18:46:27 d2.data.common]: Serializing 5000 elements to byte tensors and concatenating them all ...
[10/23 18:46:27 d2.data.common]: Serialized dataset takes 19.10 MiB
[10/23 18:46:28 d2.evaluation.evaluator]: Start inference on 5000 batches
Doing attack: <function tog_attention at 0x1554a02dc400>
/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch/functional.py:513: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /opt/conda/conda-bld/pytorch_1724789220573/work/aten/src/ATen/native/TensorShape.cpp:3609.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Got output image tensor([[[ 57.5238,  56.5921,  51.9988,  ...,  24.6450,  19.9505,  17.0000],
         [ 57.0000,  41.0000,  47.0398,  ...,  29.9657,  20.0192,  26.9116],
         [ 47.9851,  43.7429,  47.5132,  ...,  32.1412,  21.7501,  30.2145],
         ...,
         [183.0128, 181.5524, 185.0557,  ..., 211.7188, 201.0046, 215.1294],
         [171.0872, 171.9712, 175.2524,  ..., 204.3113, 204.8006, 207.0416],
         [173.6385, 179.3014, 181.9371,  ..., 210.0000, 207.9374, 215.2080]],

        [[103.5348, 103.5641, 106.0000,  ...,  80.3055,  72.5886,  65.0000],
         [106.0000,  90.0000,  95.7600,  ...,  79.4317,  72.2813,  71.0703],
         [102.5926, 105.1019,  99.0000,  ...,  79.1288,  65.0433,  73.1683],
         ...,
         [185.9162, 181.7905, 189.7245,  ..., 213.8560, 209.7566, 205.5029],
         [171.0000, 172.0580, 177.8720,  ..., 207.9467, 203.4979, 201.0000],
         [181.2818, 180.0274, 181.8022,  ..., 218.0000, 206.9279, 215.6214]],

        [[166.9982, 162.2808, 171.6719,  ..., 148.9513, 148.7724, 149.4329],
         [173.0000, 170.5450, 166.9900,  ..., 151.0158, 141.0513, 148.9554],
         [173.0000, 173.0000, 158.9664,  ..., 152.3063, 138.0000, 142.5057],
         ...,
         [198.0000, 185.5823, 192.0000,  ..., 218.6197, 207.4660, 208.0983],
         [186.7476, 182.2906, 178.0000,  ..., 213.8133, 213.0706, 204.6856],
         [187.0236, 177.5583, 184.5163,  ..., 207.6096, 211.0255, 217.0516]]])
[10/23 18:46:48 d2.evaluation.evaluator]: Inference done 37/5000. Dataloading: 0.0742 s/iter. Inference: 0.5510 s/iter. Eval: 0.0000 s/iter. Total: 0.6253 s/iter. ETA=0:51:43
Got output image tensor([[[136.3450, 139.6609, 159.0000,  ..., 254.1308, 253.3791, 247.4641],
         [128.7945, 144.0435, 152.8381,  ..., 255.0000, 250.7848, 255.0000],
         [121.0000, 135.0736, 139.0236,  ..., 243.9925, 238.0000, 252.0440],
         ...,
         [237.0000, 230.9170, 222.8103,  ..., 243.6116, 236.0000, 245.5446],
         [222.9756, 222.6753, 220.0000,  ..., 237.9977, 238.3117, 247.8187],
         [226.9503, 236.6365, 230.7395,  ..., 243.9585, 246.1902, 245.9957]],

        [[101.6746, 110.9045, 142.0328,  ..., 241.6900, 236.3453, 232.7428],
         [100.4603, 115.2731, 127.9787,  ..., 236.7644, 235.5289, 236.1919],
         [ 92.0077, 107.3861, 103.8785,  ..., 247.0000, 235.0057, 244.2221],
         ...,
         [231.8159, 235.0004, 220.0000,  ..., 251.9448, 236.0000, 240.1990],
         [227.7078, 221.0408, 223.7115,  ..., 239.9707, 244.4241, 245.7593],
         [235.0145, 228.1054, 233.8168,  ..., 236.0000, 252.0000, 236.0000]],

        [[108.1400, 119.2227, 137.7693,  ..., 235.9731, 232.0589, 235.9570],
         [ 94.0000, 111.9028, 118.7674,  ..., 236.0530, 229.2166, 226.7577],
         [ 88.0000,  90.1817,  99.8021,  ..., 225.0000, 225.0000, 237.4908],
         ...,
         [235.2458, 237.0000, 230.1661,  ..., 251.0412, 247.9861, 239.9748],
         [227.4658, 231.8727, 223.1010,  ..., 251.4957, 237.7657, 237.3346],
         [230.1427, 227.3195, 226.0133,  ..., 243.2317, 236.0000, 240.1931]]])
[10/23 18:47:01 d2.evaluation.evaluator]: Inference done 255/5000. Dataloading: 0.0393 s/iter. Inference: 0.0931 s/iter. Eval: 0.0000 s/iter. Total: 0.1325 s/iter. ETA=0:10:28
Got output image tensor([[[ 80.2195,  72.4377,  44.2422,  ...,  29.0919,  25.6076,  25.0425],
         [ 93.9938,  67.5392,  61.9686,  ...,  28.2306,  36.1512,  34.0266],
         [ 86.8293,  79.9518,  56.0342,  ...,  45.2734,  41.9466,  42.0256],
         ...,
         [146.0480, 136.1033, 137.9218,  ..., 136.0944, 150.8164, 143.0000],
         [142.7842, 136.1139, 141.1298,  ..., 145.1068, 147.0967, 139.1313],
         [144.9977, 146.9266, 142.2372,  ..., 138.5832, 145.9143, 137.8789]],

        [[ 77.1279,  58.9447,  44.5423,  ...,  27.8369,  22.1816,  20.0000],
         [ 71.6485,  67.9959,  40.6806,  ...,  22.8870,  31.5100,  20.5874],
         [ 86.5409,  64.0378,  54.9407,  ...,  28.1150,  24.0993,  22.9590],
         ...,
         [134.9769, 133.7385, 134.0314,  ..., 137.6962, 149.0132, 144.4200],
         [133.2439, 132.0079, 134.0262,  ..., 135.0314, 136.0314, 146.6805],
         [130.0180, 129.0314, 138.6445,  ..., 137.2834, 147.6062, 144.2242]],

        [[ 69.6752,  57.9353,  37.9175,  ...,  23.7661,  11.5059,  20.8509],
         [ 64.4905,  52.9546,  42.9393,  ...,  25.9487,  20.3132,   8.9937],
         [ 72.5861,  53.2802,  37.0202,  ...,  23.9700,  14.7420,  12.0314],
         ...,
         [137.7011, 139.9730, 139.7166,  ..., 146.9104, 151.9686, 139.9823],
         [132.0314, 133.0314, 136.7619,  ..., 142.0000, 144.0744, 139.1661],
         [133.5029, 134.0729, 134.0314,  ..., 139.5047, 138.4511, 148.3476]]])
[10/23 18:47:08 d2.evaluation.evaluator]: Inference done 288/5000. Dataloading: 0.0387 s/iter. Inference: 0.1044 s/iter. Eval: 0.0000 s/iter. Total: 0.1431 s/iter. ETA=0:11:14
Got output image tensor([[[123.8151, 122.0000, 124.4653,  ...,  65.6763,  75.5129,  81.6130],
         [123.0000, 127.0791, 135.5024,  ...,  65.7673,  73.9892,  78.4525],
         [124.0000, 132.0000, 135.0825,  ...,  69.0363,  69.9517,  74.6109],
         ...,
         [ 51.9640,  46.8592,  48.0413,  ...,  64.7028,  68.9173,  59.2371],
         [ 55.5911,  57.2994,  58.6126,  ...,  77.0000,  73.2262,  60.9975],
         [ 52.9445,  58.3957,  59.0765,  ...,  74.1232,  68.3276,  60.6279]],

        [[ 99.0000,  93.0022,  92.9025,  ...,  40.3382,  44.9101,  48.0000],
         [100.0000,  95.9633,  94.1775,  ...,  27.5470,  42.0000,  42.5076],
         [ 99.0230,  93.6074,  91.2890,  ...,  27.8325,  23.4676,  35.9555],
         ...,
         [114.4036, 119.2490, 114.4380,  ..., 148.1117, 142.9932, 134.9747],
         [104.6133, 108.0507, 119.5096,  ..., 145.8868, 142.4611, 133.9047],
         [104.6734, 107.2334, 111.7693,  ..., 134.1492, 134.5018, 133.9389]],

        [[ 70.0000,  64.2844,  62.0161,  ...,  16.0814,  10.0000,  10.0000],
         [ 71.0000,  62.6237,  61.9847,  ...,   9.8270,   8.0604,   9.2847],
         [ 68.8266,  65.0106,  58.0990,  ...,  13.2882,   0.0000,   0.0000],
         ...,
         [136.8102, 136.9761, 132.0678,  ..., 162.9207, 157.2273, 157.3481],
         [137.9459, 141.3548, 131.0574,  ..., 164.3425, 156.0000, 156.3548],
         [132.6869, 142.6660, 141.1500,  ..., 158.0000, 157.5353, 156.9942]]])
[10/23 18:47:19 d2.evaluation.evaluator]: Inference done 435/5000. Dataloading: 0.0369 s/iter. Inference: 0.0825 s/iter. Eval: 0.0000 s/iter. Total: 0.1194 s/iter. ETA=0:09:05
Got output image tensor([[[ 45.0000,  46.9588,  47.0000,  ...,  57.0446,  49.0079,  42.0000],
         [ 48.0811,  58.0060,  60.2563,  ...,  51.4074,  60.7045,  48.5064],
         [ 67.0000,  64.5927,  60.4256,  ...,  67.0000,  59.0017,  55.2765],
         ...,
         [131.4103, 129.6388, 141.0680,  ..., 160.9880, 151.2788, 151.8950],
         [136.0571, 138.1235, 134.3151,  ..., 159.3071, 148.2885, 152.7859],
         [124.2294, 129.0261, 129.0079,  ..., 156.2886, 152.6987, 152.0573]],

        [[ 67.0000,  67.0000,  66.0000,  ...,  73.0063,  73.6309,  66.6036],
         [ 67.0000,  70.6411,  74.0000,  ...,  72.8971,  72.9699,  68.9575],
         [ 84.0000,  84.0000,  83.0000,  ...,  79.0000,  74.4587,  74.8767],
         ...,
         [148.7587, 143.9365, 142.1504,  ..., 158.9777, 156.4197, 156.7173],
         [152.3374, 156.0000, 142.9590,  ..., 158.2144, 154.5227, 162.4605],
         [153.0019, 140.0000, 151.6440,  ..., 150.8494, 158.8840, 154.3335]],

        [[ 70.5222,  75.3753,  70.0203,  ...,  70.2448,  62.8366,  56.0904],
         [ 81.0000,  77.2500,  71.0140,  ...,  64.0000,  64.9899,  61.7356],
         [ 78.5018,  83.0000,  82.0000,  ...,  70.0257,  64.0004,  60.0000],
         ...,
         [136.8918, 127.8870, 129.0049,  ..., 154.0341, 148.6767, 151.4293],
         [131.0000, 126.2685, 124.0205,  ..., 143.0000, 160.0000, 146.0183],
         [128.8620, 127.9092, 123.0000,  ..., 141.9654, 148.2038, 149.0523]]])
[10/23 18:47:36 d2.evaluation.evaluator]: Inference done 736/5000. Dataloading: 0.0358 s/iter. Inference: 0.0570 s/iter. Eval: 0.0000 s/iter. Total: 0.0928 s/iter. ETA=0:06:35
Got output image tensor([[[ 98.7629,  94.8111,  90.8532,  ..., 122.5585, 126.9666, 122.0569],
         [ 96.9811,  98.2373,  94.0430,  ..., 111.7382, 127.0000, 124.5304],
         [103.1902,  93.1038,  93.3055,  ..., 120.3199, 124.0000, 123.6198],
         ...,
         [152.2665, 167.9416, 171.9500,  ...,  56.0000,  51.9176,  50.8871],
         [164.0293, 172.1160, 166.6587,  ...,  47.7203,  56.0000,  51.7624],
         [184.7511, 169.1823, 174.9494,  ...,  59.0000,  49.0000,  49.0413]],

        [[ 64.1432,  63.8829,  61.9253,  ...,  80.4204,  81.9981,  83.0000],
         [ 69.7141,  63.9538,  69.6564,  ...,  81.5582,  85.7068,  81.0000],
         [ 59.4035,  69.3671,  60.7388,  ...,  80.3001,  88.4815,  80.4324],
         ...,
         [129.5931, 133.5852, 132.9690,  ...,  18.0020,   8.0000,  14.7472],
         [145.6584, 150.0000, 137.0000,  ...,  13.0000,  11.4838,  11.8171],
         [154.0000, 139.3332, 145.1573,  ...,  17.2166,  17.3840,  16.4004]],

        [[ 42.0000,  41.3251,  39.9161,  ...,  40.6487,  37.9765,  46.9567],
         [ 40.2004,  45.5959,  41.1010,  ...,  33.7872,  41.2647,  34.9942],
         [ 48.6749,  36.4285,  49.9711,  ...,  31.9678,  43.0000,  34.6422],
         ...,
         [ 80.0000,  82.2746,  90.3006,  ...,  21.5159,  13.6221,  20.0000],
         [ 95.2181,  97.9729,  90.0000,  ...,  19.2559,  23.9976,  22.0000],
         [105.7695,  95.4301,  95.0339,  ...,  26.3525,  23.2203,  23.9746]]])
[10/23 18:47:53 d2.evaluation.evaluator]: Inference done 1085/5000. Dataloading: 0.0352 s/iter. Inference: 0.0437 s/iter. Eval: 0.0000 s/iter. Total: 0.0790 s/iter. ETA=0:05:09
Got output image tensor([[[ 32.7953,  28.1649,  35.7293,  ..., 114.6417, 105.8357, 107.0000],
         [ 30.9093,  32.5693,  32.0782,  ..., 130.7881, 125.0000, 114.5097],
         [ 26.1675,  32.9100,  31.8568,  ..., 138.0963, 129.3122, 123.1204],
         ...,
         [233.8404, 228.4881, 227.0000,  ...,  62.0458,  60.4419,  60.0000],
         [228.0000, 228.0000, 235.0000,  ...,  76.0000,  65.9817,  61.0000],
         [236.2465, 240.9576, 227.1696,  ...,  73.5714,  75.9772,  62.0000]],

        [[ 16.7367,  18.8783,  14.9920,  ...,  46.0214,  27.0000,  12.0000],
         [ 13.1131,  24.0000,  14.9754,  ...,  61.9410,  30.0000,  17.9671],
         [ 11.0706,  12.1876,  23.0623,  ...,  69.0000,  47.4358,  30.5069],
         ...,
         [234.4021, 231.7871, 231.9389,  ...,  71.8305,  73.0000,  59.2944],
         [238.0000, 233.6037, 239.5975,  ...,  74.0000,  75.0000,  59.8951],
         [236.0598, 235.9538, 234.7367,  ...,  75.0000,  62.9807,  60.0000]],

        [[  0.0000,   5.6862,   3.0542,  ...,  58.4879,  28.0000,  18.3123],
         [ 12.0000,   1.6682,   0.3492,  ...,  62.2328,  40.8391,  24.0000],
         [  8.4925,   8.1043,   9.2293,  ...,  76.0000,  57.8866,  36.0287],
         ...,
         [238.9726, 239.1543, 228.0000,  ...,  53.9723,  60.0000,  61.0000],
         [239.7809, 230.7593, 230.7031,  ...,  52.5869,  46.0195,  46.0000],
         [240.9377, 239.1270, 237.8435,  ...,  55.8884,  47.0000,  47.0000]]])
[10/23 18:48:05 d2.evaluation.evaluator]: Inference done 1244/5000. Dataloading: 0.0351 s/iter. Inference: 0.0431 s/iter. Eval: 0.0000 s/iter. Total: 0.0782 s/iter. ETA=0:04:53
Got output image tensor([[[104.6833, 113.8158, 108.8127,  ..., 149.7050, 144.0000, 151.1343],
         [ 99.0000,  99.7428,  97.0000,  ..., 136.9800, 138.9479, 152.8334],
         [ 98.0000, 106.5800,  96.0000,  ..., 137.9030, 139.9725, 144.1957],
         ...,
         [181.1835, 175.6915, 161.1088,  ..., 132.9828, 142.6836, 150.0000],
         [186.0000, 176.0000, 179.5694,  ..., 136.1869, 130.0000, 144.4011],
         [186.4415, 183.4263, 179.5706,  ..., 128.0000, 133.9894, 136.1955]],

        [[ 65.2473,  63.3303,  66.5308,  ..., 122.4562, 108.3806, 110.7459],
         [ 62.0000,  61.0000,  77.0000,  ..., 106.7202, 110.0121, 107.9108],
         [ 73.9148,  76.7079,  75.1373,  ..., 106.5786, 108.5874, 112.0738],
         ...,
         [179.5154, 182.7784, 171.7428,  ..., 103.6006, 116.0000, 126.1269],
         [187.4996, 184.8085, 176.9244,  ..., 109.0100, 111.9076, 124.9271],
         [180.5731, 179.4582, 177.3296,  ..., 107.0000, 117.7577, 119.0721]],

        [[ 43.9897,  40.6962,  28.9830,  ...,  82.8310,  84.1001,  83.8625],
         [ 43.7545,  47.0000,  28.4966,  ...,  74.5674,  75.5314,  73.7722],
         [ 35.3012,  26.0000,  38.4310,  ...,  83.7639,  75.0577,  70.6316],
         ...,
         [182.7547, 185.2952, 182.1190,  ...,  65.0000,  77.0167,  86.0000],
         [184.2511, 186.0000, 179.1871,  ...,  71.5768,  64.0000,  72.5433],
         [176.9399, 172.6937, 162.0000,  ...,  63.5026,  73.2365,  63.9796]]])
[10/23 18:48:11 d2.evaluation.evaluator]: Inference done 1262/5000. Dataloading: 0.0351 s/iter. Inference: 0.0470 s/iter. Eval: 0.0000 s/iter. Total: 0.0821 s/iter. ETA=0:05:06
Got output image tensor([[[134.9039, 135.3324, 135.2122,  ...,  83.0604,  86.1309,  86.4814],
         [126.0000, 128.1085, 130.5389,  ...,  82.4921,  84.0920,  88.9771],
         [141.0000, 129.4837, 127.0000,  ...,  93.0499,  87.1845,  95.2316],
         ...,
         [140.7563, 145.1426, 145.0044,  ..., 114.7445, 103.0000, 114.5670],
         [148.8026, 147.2346, 147.8723,  ..., 123.0000, 111.6260, 110.3217],
         [146.3596, 133.0376, 133.9792,  ..., 115.9923, 122.0000, 121.0000]],

        [[127.0097, 128.6590, 131.0000,  ...,  75.2107,  80.9420,  77.5274],
         [129.9874, 125.3386, 128.1638,  ...,  84.6095,  73.3864,  75.5500],
         [138.0000, 129.7405, 130.1110,  ...,  79.1329,  79.3234,  84.7208],
         ...,
         [135.7494, 138.0461, 131.0000,  ..., 101.8740,  94.1246, 103.1680],
         [142.9295, 133.4942, 131.0000,  ..., 104.0205,  96.0000,  95.0000],
         [132.0179, 138.5673, 131.0000,  ...,  99.0000, 101.0086, 105.8517]],

        [[122.3042, 118.0000, 119.7322,  ...,  70.0000,  76.4865,  80.9277],
         [122.9562, 118.0607, 124.0983,  ...,  75.2038,  73.6508,  74.7930],
         [119.9538, 123.0199, 129.3617,  ...,  81.3084,  79.6926,  90.0228],
         ...,
         [143.1334, 153.0000, 152.0000,  ...,  87.0172,  85.1685,  97.0285],
         [145.0000, 143.1402, 144.2765,  ...,  95.1009,  87.0000,  86.0000],
         [144.3918, 139.4272, 139.4257,  ...,  93.7520,  93.9219,  91.0325]]])
[10/23 18:48:24 d2.evaluation.evaluator]: Inference done 1529/5000. Dataloading: 0.0339 s/iter. Inference: 0.0425 s/iter. Eval: 0.0000 s/iter. Total: 0.0764 s/iter. ETA=0:04:25
Got output image tensor([[[ 80.1234,  80.0314,  80.9487,  ..., 111.6632, 111.9747, 107.9557],
         [ 80.1229,  89.9484,  79.0314,  ..., 110.2496, 111.8003, 111.9943],
         [ 87.5331,  93.7811,  83.9854,  ..., 101.7118, 114.9686, 109.0537],
         ...,
         [170.7695, 163.0314, 163.0314,  ..., 190.6383, 182.4718, 187.0408],
         [164.6844, 169.0427, 173.4428,  ..., 177.1017, 186.7707, 181.9125],
         [166.8772, 172.9486, 172.1105,  ..., 177.0314, 181.4492, 184.6932]],

        [[126.4221, 127.0183, 121.6413,  ..., 137.4877, 136.0962, 139.9686],
         [121.0314, 135.0567, 121.6670,  ..., 127.3031, 128.1610, 126.0266],
         [121.0314, 125.0951, 124.0184,  ..., 135.9828, 130.6184, 132.9649],
         ...,
         [184.6815, 181.0374, 177.7130,  ..., 191.5354, 192.7394, 188.0000],
         [180.8233, 177.5153, 178.7239,  ..., 180.1581, 188.9864, 191.7067],
         [185.9686, 183.6085, 175.9693,  ..., 180.0314, 186.5815, 191.0820]],

        [[176.2662, 176.8020, 175.7284,  ..., 188.9686, 179.8917, 182.6178],
         [176.8499, 188.8884, 178.1299,  ..., 182.7781, 188.0048, 183.7521],
         [175.0314, 190.9686, 180.8813,  ..., 182.2005, 178.0001, 184.8721],
         ...,
         [194.0269, 191.5071, 196.5778,  ..., 196.8669, 194.9568, 195.3337],
         [194.6250, 191.0915, 189.9436,  ..., 189.0314, 194.7843, 188.0314],
         [194.6732, 195.9686, 188.0175,  ..., 191.0348, 202.2334, 195.5638]]])
[10/23 18:48:49 d2.evaluation.evaluator]: Inference done 2063/5000. Dataloading: 0.0338 s/iter. Inference: 0.0347 s/iter. Eval: 0.0000 s/iter. Total: 0.0684 s/iter. ETA=0:03:21
Got output image tensor([[[223.0914, 223.1058, 220.6274,  ..., 176.3282, 178.2482, 181.7223],
         [223.3742, 223.1572, 222.7198,  ..., 179.7010, 183.7883, 186.1528],
         [212.0404, 217.4369, 219.0064,  ..., 184.1334, 183.0551, 183.0021],
         ...,
         [ 42.5306,  51.9373,  45.8317,  ...,  59.0849,  52.3883,  50.0627],
         [ 39.1054,  48.8322,  42.0227,  ...,  62.7120,  60.5129,  47.5911],
         [ 46.0777,  42.6129,  52.9373,  ...,  70.9511,  52.9007,  44.0627]],

        [[217.4951, 215.8932, 215.0627,  ..., 189.9009, 184.2782, 187.5470],
         [229.9373, 225.2027, 217.0422,  ..., 183.8720, 192.2694, 191.0356],
         [218.0396, 222.0000, 214.0627,  ..., 180.6513, 191.2236, 183.9561],
         ...,
         [ 48.0418,  37.2700,  52.4912,  ...,  34.6847,  35.4630,  41.0000],
         [ 45.9457,  34.0627,  44.9994,  ...,  36.0627,  34.6415,  33.4547],
         [ 40.7159,  40.0000,  42.0000,  ...,  50.2352,  39.3065,  26.7966]],

        [[218.0627, 218.0627, 219.0627,  ..., 193.4174, 190.2167, 202.9373],
         [231.9146, 231.7803, 219.0627,  ..., 194.0603, 202.9172, 195.0000],
         [232.1418, 233.9373, 222.0301,  ..., 201.0152, 196.7632, 196.7097],
         ...,
         [ 26.0627,  28.0627,  47.9373,  ...,  26.2110,  17.7421,  21.9082],
         [ 25.2729,  35.9038,  43.1142,  ...,  16.0627,  10.0627,  12.5539],
         [ 29.0622,  37.6759,  39.3118,  ...,  21.9189,  11.0355,   4.5280]]])
[10/23 18:49:00 d2.evaluation.evaluator]: Inference done 2223/5000. Dataloading: 0.0337 s/iter. Inference: 0.0347 s/iter. Eval: 0.0000 s/iter. Total: 0.0685 s/iter. ETA=0:03:10
Got output image tensor([[[227.0000, 235.0000, 237.7605,  ..., 255.0000, 245.0000, 245.0932],
         [243.0000, 234.7386, 231.9906,  ..., 255.0000, 245.4460, 245.0785],
         [236.6481, 227.0000, 242.9858,  ..., 255.0000, 238.0000, 234.0000],
         ...,
         [ 20.0000,  14.2319,  16.1083,  ..., 234.0937, 235.3094, 238.9832],
         [  6.9389,   3.0000,  13.4684,  ..., 225.1102, 234.0742, 237.2861],
         [ 12.9439,  11.1879,  20.0000,  ..., 222.1335, 230.1096, 237.1439]],

        [[235.3383, 249.9919, 239.0710,  ..., 230.0735, 232.0411, 229.1136],
         [250.0000, 245.9742, 245.0036,  ..., 234.7416, 238.0000, 225.6050],
         [236.0434, 234.0000, 238.0059,  ..., 245.4146, 241.1794, 222.0000],
         ...,
         [ 20.0000,  16.1357,  18.3947,  ..., 229.9557, 229.9699, 236.3757],
         [  3.0000,   6.3517,   4.0000,  ..., 218.1454, 230.7277, 234.3427],
         [  6.7981,   7.3340,  15.9056,  ..., 224.9528, 225.0583, 240.0947]],

        [[255.0000, 254.2712, 255.0000,  ..., 249.9975, 224.5588, 225.0549],
         [255.0000, 244.1152, 245.0000,  ..., 246.1269, 223.9853, 224.6949],
         [255.0000, 246.0082, 247.9993,  ..., 251.0000, 239.0000, 217.9879],
         ...,
         [ 16.2715,  18.0241,  16.8250,  ..., 208.5415, 216.1935, 213.0009],
         [  5.0000,   8.4140,   4.0000,  ..., 212.4571, 207.0449, 214.0240],
         [  8.9666,   8.9728,  13.9802,  ..., 207.9332, 220.1218, 223.0419]]])
[10/23 18:49:08 d2.evaluation.evaluator]: Inference done 2282/5000. Dataloading: 0.0336 s/iter. Inference: 0.0365 s/iter. Eval: 0.0000 s/iter. Total: 0.0702 s/iter. ETA=0:03:10
Got output image tensor([[[  5.4018,  10.2577,   3.3804,  ..., 113.0000, 113.0000, 111.1622],
         [  0.0000,   1.4017,   8.9598,  ..., 107.8715, 111.5954, 107.5969],
         [  0.0000,   4.1893,   0.0000,  ...,  99.8976, 110.0551, 110.0960],
         ...,
         [ 66.9738,  72.8295,  71.7085,  ...,  86.1038,  78.9155,  89.4207],
         [ 70.1628,  78.0000,  66.9439,  ...,  95.0000,  93.0977,  95.8321],
         [ 76.2139,  72.9791,  72.3277,  ...,  97.7492, 100.0000,  87.9769]],

        [[ 14.6628,  16.0065,  18.3303,  ..., 114.3337, 100.0000, 101.8936],
         [  9.6791,  21.0000,  17.5199,  ..., 100.6068,  99.0000,  99.0000],
         [ 16.0390,  16.6828,  10.9291,  ..., 105.0264,  98.0000, 107.8900],
         ...,
         [ 67.2236,  67.7372,  72.2508,  ...,  68.0371,  76.0000,  72.0716],
         [ 72.2615,  67.1028,  71.1928,  ...,  66.2035,  65.0000,  75.0000],
         [ 67.8460,  74.2127,  70.3832,  ...,  75.6849,  74.1158,  70.0000]],

        [[ 13.0848,  10.5869,  19.4303,  ..., 138.6053, 146.3380, 140.2745],
         [ 14.3848,  24.6993,  21.8811,  ..., 133.0000, 135.4257, 136.9598],
         [ 23.9576,  11.0109,  18.2091,  ..., 148.0000, 148.0000, 135.9935],
         ...,
         [ 48.2925,  56.6505,  51.0545,  ...,  51.6389,  57.3244,  49.3810],
         [ 56.0719,  52.9777,  52.8074,  ...,  59.1291,  56.1171,  58.3176],
         [ 55.9696,  50.0000,  54.2978,  ...,  63.7426,  64.5420,  57.0000]]])
[10/23 18:49:19 d2.evaluation.evaluator]: Inference done 2435/5000. Dataloading: 0.0336 s/iter. Inference: 0.0368 s/iter. Eval: 0.0000 s/iter. Total: 0.0704 s/iter. ETA=0:03:00
Got output image tensor([[[254.4942, 255.0000, 252.0015,  ...,  92.5506,  93.6010, 101.1819],
         [250.0108, 252.0184, 255.0000,  ...,  90.6607,  99.7822,  91.1069],
         [252.4164, 253.4358, 245.0000,  ...,  94.5677,  97.9920,  92.5760],
         ...,
         [ 80.0000,  83.8656,  81.0000,  ...,   3.9488,   1.9288,   0.0000],
         [ 87.3308,  91.0606,  88.6851,  ...,   0.0000,   0.0000,   0.4655],
         [ 85.6232,  83.4683,  87.0752,  ...,   2.0103,   5.0516,   0.0000]],

        [[255.0000, 255.0000, 254.0114,  ..., 120.5652, 121.0000, 109.1329],
         [255.0000, 255.0000, 255.0000,  ..., 116.0810, 113.9582, 115.9248],
         [255.0000, 247.0549, 246.9880,  ..., 111.1877, 109.5911, 103.0921],
         ...,
         [109.8855, 109.2288, 105.0507,  ...,   0.0000,   3.8577,   1.9385],
         [114.7053, 117.5072, 113.0985,  ...,   4.0793,   4.0789,   4.5632],
         [113.0532, 112.0012, 111.1018,  ...,   0.0000,   4.5706,   0.0000]],

        [[255.0000, 255.0000, 255.0000,  ..., 108.1700, 117.2079, 116.2526],
         [254.9278, 250.1348, 250.0310,  ..., 112.0761, 112.0000, 112.3790],
         [255.0000, 255.0000, 255.0000,  ..., 108.9626, 102.0000, 105.6106],
         ...,
         [131.3254, 137.1751, 140.8264,  ...,   4.1093,   5.5480,   3.4779],
         [145.6528, 142.6061, 147.0199,  ...,   1.1896,   1.8489,   0.0000],
         [152.9537, 153.0000, 149.9422,  ...,   6.0205,   0.0000,   0.0000]]])
[10/23 18:49:26 d2.evaluation.evaluator]: Inference done 2460/5000. Dataloading: 0.0335 s/iter. Inference: 0.0390 s/iter. Eval: 0.0000 s/iter. Total: 0.0725 s/iter. ETA=0:03:04
Got output image tensor([[[ 74.0000,  85.1078,  80.3622,  ...,  32.1032,  32.9417,  37.0000],
         [ 91.0000,  87.6790,  77.0052,  ...,  31.8816,  33.0726,  39.1798],
         [ 92.9538,  90.9956,  95.0205,  ...,  31.4123,  34.0000,  36.0000],
         ...,
         [ 29.0000,  42.4986,  33.0496,  ..., 157.0000, 139.0000, 149.0134],
         [ 50.0309,  38.0308,  49.0000,  ..., 151.6804, 141.0000, 140.0000],
         [ 53.9421,  40.9948,  39.0860,  ..., 147.0000, 142.0000, 140.0000]],

        [[ 93.9849,  95.9154,  90.0000,  ...,  34.2998,  30.0586,  28.5191],
         [104.3907,  94.9294, 101.3087,  ...,  38.6190,  35.3127,  36.0000],
         [105.0475, 114.9925, 100.3806,  ...,  35.7115,  29.9696,  28.0279],
         ...,
         [ 61.0436,  76.0199,  75.1005,  ..., 129.0000, 132.0040, 146.0000],
         [ 69.5172,  64.9564,  73.9409,  ..., 149.0000, 132.0000, 147.0000],
         [ 65.0000,  63.0000,  58.0000,  ..., 151.0000, 149.0000, 147.0000]],

        [[ 79.8847,  82.0000,  73.2887,  ...,  32.8909,  37.8122,  30.0161],
         [ 81.0000,  83.0042,  68.7157,  ...,  26.2750,  30.9895,  32.9974],
         [ 95.8853,  85.8684,  73.9084,  ...,  37.7203,  27.0000,  30.8911],
         ...,
         [ 48.6227,  57.0672,  51.0081,  ..., 133.0000, 140.9749, 151.0000],
         [ 48.1173,  53.8618,  56.3555,  ..., 137.0000, 136.7834, 150.0000],
         [ 51.0192,  49.9891,  51.0116,  ..., 155.0000, 152.0000, 150.0000]]])
[10/23 18:49:37 d2.evaluation.evaluator]: Inference done 2632/5000. Dataloading: 0.0332 s/iter. Inference: 0.0388 s/iter. Eval: 0.0000 s/iter. Total: 0.0720 s/iter. ETA=0:02:50
Got output image tensor([[[nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         ...,
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan]],

        [[nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         ...,
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan]],

        [[nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         ...,
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan]]])
Traceback (most recent call last):
  File "/storage/ice1/5/9/zyahn3/TOG_plus/attack_detrex.py", line 317, in <module>
    launch(
  File "/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2/engine/launch.py", line 84, in launch
    main_func(*args)
  File "/storage/ice1/5/9/zyahn3/TOG_plus/attack_detrex.py", line 310, in main
    print(do_test(cfg, model, eval_only=True, attack=attack, attack_mode=cfg.attack_mode))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/storage/ice1/5/9/zyahn3/TOG_plus/attack_detrex.py", line 163, in do_test
    ret = inference_on_dataset(
          ^^^^^^^^^^^^^^^^^^^^^
  File "/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2/evaluation/evaluator.py", line 235, in inference_on_dataset
    outputs = model(inputs)
              ^^^^^^^^^^^^^
  File "/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/storage/ice1/5/9/zyahn3/TOG_plus/detrex/projects/dino/modeling/dino.py", line 319, in forward
    r = detector_postprocess(results_per_image, height, width)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2/modeling/postprocessing.py", line 56, in detector_postprocess
    output_boxes.clip(results.image_size)
  File "/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2/structures/boxes.py", line 191, in clip
    assert torch.isfinite(self.tensor).all(), "Box tensor contains infinite or NaN!"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: Box tensor contains infinite or NaN!
---------------------------------------
Begin Slurm Epilog: Oct-23-2024 18:49:51
Job ID:        881944
Array Job ID:  _4294967294
User ID:       zyahn3
Account:       scs
Job name:      TOG_Plus_InternImage
Resources:     cpu=1,gres/gpu:a100=1,mem=128G,node=1
Rsrc Used:     cput=00:05:08,vmem=0,walltime=00:05:08,mem=4566768K,energy_used=0
Partition:     coc-gpu
Nodes:         atl1-1-01-005-15-0
---------------------------------------
