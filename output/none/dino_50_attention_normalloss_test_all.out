---------------------------------------
Begin Slurm Prolog: Oct-23-2024 10:25:46
Job ID:    881239
User ID:   zyahn3
Account:   scs
Job name:  TOG_Plus_R50
Partition: coc-gpu
---------------------------------------
/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detrex/layers/dcn_v3.py:23: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  @custom_fwd
/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detrex/layers/dcn_v3.py:52: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  @custom_bwd
[10/23 10:27:23 detectron2]: Rank of current process: 0. World size: 1
[10/23 10:27:25 detectron2]: Environment info:
-------------------------------  ----------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.12.4 | packaged by Anaconda, Inc. | (main, Jun 18 2024, 15:12:24) [GCC 11.2.0]
numpy                            1.26.4
detectron2                       0.6 @/storage/ice1/5/9/zyahn3/TOG_plus/detrex/detectron2/detectron2
Compiler                         GCC 12.3
CUDA compiler                    not available
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.1 @/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   555.42.02
CUDA_HOME                        /usr/local/cuda
Pillow                           10.4.0
torchvision                      0.19.1 @/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  ----------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.4
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.4, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/23 10:27:25 detectron2]: Command line arguments: Namespace(config_file='detrex/projects/dino/configs/dino-resnet/dino_r50_4scale_12ep.py', resume=False, eval_only=True, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:53103', opts=['train.init_checkpoint=model_files/dino_r50_4scale.pth', 'attack=attention', 'attack_mode=untargeted', 'sample=0.005'])
[10/23 10:27:25 detectron2]: Contents of args.config_file=detrex/projects/dino/configs/dino-resnet/dino_r50_4scale_12ep.py:
[38;5;204mfrom[39m[38;5;15m [39m[38;5;15mdetrex[39m[38;5;15m.[39m[38;5;15mconfig[39m[38;5;15m [39m[38;5;204mimport[39m[38;5;15m [39m[38;5;15mget_config[39m
[38;5;204mfrom[39m[38;5;15m [39m[38;5;15m.[39m[38;5;15m.[39m[38;5;15mmodels[39m[38;5;15m.[39m[38;5;15mdino_r50[39m[38;5;15m [39m[38;5;204mimport[39m[38;5;15m [39m[38;5;15mmodel[39m

[38;5;245m# get default config[39m
[38;5;15mdataloader[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/data/coco_detr.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mdataloader[39m
[38;5;15moptimizer[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/optim.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mAdamW[39m
[38;5;15mlr_multiplier[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/coco_schedule.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mlr_multiplier_12ep[39m
[38;5;15mtrain[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mget_config[39m[38;5;15m([39m[38;5;186m"[39m[38;5;186mcommon/train.py[39m[38;5;186m"[39m[38;5;15m)[39m[38;5;204m.[39m[38;5;15mtrain[39m

[38;5;245m# modify training config[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15minit_checkpoint[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/torchvision/R-50.pkl[39m[38;5;186m"[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m./output/dino_r50_4scale_12ep[39m[38;5;186m"[39m

[38;5;245m# max training iterations[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mmax_iter[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m90000[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15meval_period[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mlog_period[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m20[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mcheckpointer[39m[38;5;204m.[39m[38;5;15mperiod[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m5000[39m

[38;5;245m# gradient clipping for training[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15menabled[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;81mTrue[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mmax_norm[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mclip_grad[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mnorm_type[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m2[39m

[38;5;245m# set training devices[39m
[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mdevice[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mcuda[39m[38;5;186m"[39m
[38;5;15mmodel[39m[38;5;204m.[39m[38;5;15mdevice[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mdevice[39m

[38;5;245m# modify optimizer config[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mlr[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m1e-4[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mbetas[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15m([39m[38;5;141m0.9[39m[38;5;15m,[39m[38;5;15m [39m[38;5;141m0.999[39m[38;5;15m)[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mweight_decay[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m1e-4[39m
[38;5;15moptimizer[39m[38;5;204m.[39m[38;5;15mparams[39m[38;5;204m.[39m[38;5;15mlr_factor_func[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;81mlambda[39m[38;5;15m [39m[38;5;15mmodule_name[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m[38;5;15m [39m[38;5;81mif[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mbackbone[39m[38;5;186m"[39m[38;5;15m [39m[38;5;204min[39m[38;5;15m [39m[38;5;15mmodule_name[39m[38;5;15m [39m[38;5;81melse[39m[38;5;15m [39m[38;5;141m1[39m

[38;5;245m# modify dataloader config[39m
[38;5;15mdataloader[39m[38;5;204m.[39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mnum_workers[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m16[39m

[38;5;245m# please notice that this is total batch size.[39m
[38;5;245m# surpose you're using 4 gpus for training and the batch size for[39m
[38;5;245m# each gpu is 16/4 = 4[39m
[38;5;15mdataloader[39m[38;5;204m.[39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15mtotal_batch_size[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;141m16[39m

[38;5;245m# dump the testing results into output_dir for visualization[39m
[38;5;15mdataloader[39m[38;5;204m.[39m[38;5;15mevaluator[39m[38;5;204m.[39m[38;5;15moutput_dir[39m[38;5;15m [39m[38;5;204m=[39m[38;5;15m [39m[38;5;15mtrain[39m[38;5;204m.[39m[38;5;15moutput_dir[39m

[38;5;15mattack[39m[38;5;204m=[39m[38;5;81mNone[39m
[38;5;15mattack_mode[39m[38;5;204m=[39m[38;5;81mNone[39m
[38;5;15msample[39m[38;5;204m=[39m[38;5;141m1.0[39m

WARNING [10/23 10:27:25 d2.config.lazy]: The config contains objects that cannot serialize to a valid yaml. ./output/dino_r50_4scale_12ep/config.yaml is human-readable but cannot be loaded.
WARNING [10/23 10:27:25 d2.config.lazy]: Config is saved using cloudpickle at ./output/dino_r50_4scale_12ep/config.yaml.pkl.
[10/23 10:27:25 detectron2]: Full config saved to ./output/dino_r50_4scale_12ep/config.yaml
[10/23 10:27:25 d2.utils.env]: Using a generated random seed 25998955
[10/23 10:27:29 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from model_files/dino_r50_4scale.pth ...
[10/23 10:27:29 fvcore.common.checkpoint]: [Checkpointer] Loading from model_files/dino_r50_4scale.pth ...
/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/fvcore/common/checkpoint.py:252: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(f, map_location=torch.device("cpu"))
[10/23 10:27:30 detectron2]: Run evaluation under eval-only mode
[10/23 10:27:30 detectron2]: Run evaluation without EMA.
[10/23 10:27:31 d2.data.datasets.coco]: Loaded 5000 images in COCO format from datasets/coco/annotations/instances_val2017.json
[10/23 10:27:31 d2.data.build]: Distribution of instances among all 80 categories:
|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 10777        |   bicycle    | 314          |      car      | 1918         |
|  motorcycle   | 367          |   airplane   | 143          |      bus      | 283          |
|     train     | 190          |    truck     | 414          |     boat      | 424          |
| traffic light | 634          | fire hydrant | 101          |   stop sign   | 75           |
| parking meter | 60           |    bench     | 411          |     bird      | 427          |
|      cat      | 202          |     dog      | 218          |     horse     | 272          |
|     sheep     | 354          |     cow      | 372          |   elephant    | 252          |
|     bear      | 71           |    zebra     | 266          |    giraffe    | 232          |
|   backpack    | 371          |   umbrella   | 407          |    handbag    | 540          |
|      tie      | 252          |   suitcase   | 299          |    frisbee    | 115          |
|     skis      | 241          |  snowboard   | 69           |  sports ball  | 260          |
|     kite      | 327          | baseball bat | 145          | baseball gl.. | 148          |
|  skateboard   | 179          |  surfboard   | 267          | tennis racket | 225          |
|    bottle     | 1013         |  wine glass  | 341          |      cup      | 895          |
|     fork      | 215          |    knife     | 325          |     spoon     | 253          |
|     bowl      | 623          |    banana    | 370          |     apple     | 236          |
|   sandwich    | 177          |    orange    | 285          |   broccoli    | 312          |
|    carrot     | 365          |   hot dog    | 125          |     pizza     | 284          |
|     donut     | 328          |     cake     | 310          |     chair     | 1771         |
|     couch     | 261          | potted plant | 342          |      bed      | 163          |
| dining table  | 695          |    toilet    | 179          |      tv       | 288          |
|    laptop     | 231          |    mouse     | 106          |    remote     | 283          |
|   keyboard    | 153          |  cell phone  | 262          |   microwave   | 55           |
|     oven      | 143          |   toaster    | 9            |     sink      | 225          |
| refrigerator  | 126          |     book     | 1129         |     clock     | 267          |
|     vase      | 274          |   scissors   | 36           |  teddy bear   | 190          |
|  hair drier   | 11           |  toothbrush  | 57           |               |              |
|     total     | 36335        |              |              |               |              |
[10/23 10:27:31 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/23 10:27:31 d2.data.common]: Serializing 5000 elements to byte tensors and concatenating them all ...
[10/23 10:27:31 d2.data.common]: Serialized dataset takes 19.10 MiB
[10/23 10:27:31 d2.evaluation.evaluator]: Start inference on 5000 batches
Doing attack: <function tog_attention at 0x1554a02dc540>
/home/hice1/zyahn3/.conda/envs/TOG_test/lib/python3.12/site-packages/torch/functional.py:513: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /opt/conda/conda-bld/pytorch_1724789220573/work/aten/src/ATen/native/TensorShape.cpp:3609.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[10/23 10:27:54 d2.evaluation.evaluator]: Inference done 48/5000. Dataloading: 0.0599 s/iter. Inference: 0.4614 s/iter. Eval: 0.0002 s/iter. Total: 0.5215 s/iter. ETA=0:43:02
[10/23 10:28:02 d2.evaluation.evaluator]: Inference done 261/5000. Dataloading: 0.0334 s/iter. Inference: 0.0858 s/iter. Eval: 0.0000 s/iter. Total: 0.1192 s/iter. ETA=0:09:25
[10/23 10:28:07 d2.evaluation.evaluator]: Inference done 360/5000. Dataloading: 0.0322 s/iter. Inference: 0.0688 s/iter. Eval: 0.0000 s/iter. Total: 0.1011 s/iter. ETA=0:07:49
[10/23 10:28:23 d2.evaluation.evaluator]: Inference done 867/5000. Dataloading: 0.0296 s/iter. Inference: 0.0308 s/iter. Eval: 0.0000 s/iter. Total: 0.0604 s/iter. ETA=0:04:09
[10/23 10:28:29 d2.evaluation.evaluator]: Inference done 909/5000. Dataloading: 0.0295 s/iter. Inference: 0.0339 s/iter. Eval: 0.0000 s/iter. Total: 0.0634 s/iter. ETA=0:04:19
[10/23 10:28:42 d2.evaluation.evaluator]: Inference done 1266/5000. Dataloading: 0.0289 s/iter. Inference: 0.0274 s/iter. Eval: 0.0000 s/iter. Total: 0.0563 s/iter. ETA=0:03:30
[10/23 10:28:48 d2.evaluation.evaluator]: Inference done 1409/5000. Dataloading: 0.0288 s/iter. Inference: 0.0259 s/iter. Eval: 0.0000 s/iter. Total: 0.0547 s/iter. ETA=0:03:16
[10/23 10:28:59 d2.evaluation.evaluator]: Inference done 1712/5000. Dataloading: 0.0285 s/iter. Inference: 0.0227 s/iter. Eval: 0.0000 s/iter. Total: 0.0513 s/iter. ETA=0:02:48
[10/23 10:29:10 d2.evaluation.evaluator]: Inference done 2026/5000. Dataloading: 0.0283 s/iter. Inference: 0.0203 s/iter. Eval: 0.0000 s/iter. Total: 0.0486 s/iter. ETA=0:02:24
[10/23 10:29:15 d2.evaluation.evaluator]: Inference done 2154/5000. Dataloading: 0.0282 s/iter. Inference: 0.0201 s/iter. Eval: 0.0000 s/iter. Total: 0.0483 s/iter. ETA=0:02:17
[10/23 10:29:32 d2.evaluation.evaluator]: Inference done 2542/5000. Dataloading: 0.0279 s/iter. Inference: 0.0197 s/iter. Eval: 0.0000 s/iter. Total: 0.0477 s/iter. ETA=0:01:57
[10/23 10:29:44 d2.evaluation.evaluator]: Inference done 2903/5000. Dataloading: 0.0278 s/iter. Inference: 0.0180 s/iter. Eval: 0.0000 s/iter. Total: 0.0459 s/iter. ETA=0:01:36
[10/23 10:30:00 d2.evaluation.evaluator]: Inference done 3336/5000. Dataloading: 0.0277 s/iter. Inference: 0.0170 s/iter. Eval: 0.0000 s/iter. Total: 0.0447 s/iter. ETA=0:01:14
[10/23 10:30:13 d2.evaluation.evaluator]: Inference done 3752/5000. Dataloading: 0.0276 s/iter. Inference: 0.0156 s/iter. Eval: 0.0000 s/iter. Total: 0.0433 s/iter. ETA=0:00:53
[10/23 10:30:20 d2.evaluation.evaluator]: Inference done 3868/5000. Dataloading: 0.0276 s/iter. Inference: 0.0162 s/iter. Eval: 0.0000 s/iter. Total: 0.0438 s/iter. ETA=0:00:49
[10/23 10:30:27 d2.evaluation.evaluator]: Inference done 4024/5000. Dataloading: 0.0275 s/iter. Inference: 0.0161 s/iter. Eval: 0.0000 s/iter. Total: 0.0436 s/iter. ETA=0:00:42
[10/23 10:30:46 d2.evaluation.evaluator]: Inference done 4669/5000. Dataloading: 0.0274 s/iter. Inference: 0.0143 s/iter. Eval: 0.0000 s/iter. Total: 0.0417 s/iter. ETA=0:00:13
[10/23 10:30:53 d2.evaluation.evaluator]: Inference done 4796/5000. Dataloading: 0.0273 s/iter. Inference: 0.0148 s/iter. Eval: 0.0000 s/iter. Total: 0.0421 s/iter. ETA=0:00:08
[10/23 10:31:02 d2.evaluation.evaluator]: Inference done 4940/5000. Dataloading: 0.0273 s/iter. Inference: 0.0153 s/iter. Eval: 0.0000 s/iter. Total: 0.0426 s/iter. ETA=0:00:02
[10/23 10:31:03 d2.evaluation.evaluator]: Total inference time: 0:03:31.670761 (0.042377 s / iter per device, on 1 devices)
[10/23 10:31:03 d2.evaluation.evaluator]: Total inference pure compute time: 0:01:15 (0.015120 s / iter per device, on 1 devices)
[10/23 10:31:03 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[10/23 10:31:03 d2.evaluation.coco_evaluation]: Saving results to ./output/dino_r50_4scale_12ep/coco_instances_results.json
[10/23 10:31:03 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.01s)
creating index...
index created!
[10/23 10:31:03 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[10/23 10:31:06 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 3.07 seconds.
[10/23 10:31:06 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[10/23 10:31:06 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.23 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.002
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
[10/23 10:31:06 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.104 | 0.185  | 0.096  | 0.075 | 0.092 | 0.039 |
[10/23 10:31:06 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category      | AP    | category     | AP    | category       | AP    |
|:--------------|:------|:-------------|:------|:---------------|:------|
| person        | 0.792 | bicycle      | 0.000 | car            | 0.000 |
| motorcycle    | 0.594 | airplane     | 0.000 | bus            | 0.000 |
| train         | 0.000 | truck        | 0.000 | boat           | 0.000 |
| traffic light | 0.000 | fire hydrant | 0.000 | stop sign      | 0.000 |
| parking meter | 0.000 | bench        | 0.000 | bird           | 0.000 |
| cat           | 0.000 | dog          | 0.000 | horse          | 0.000 |
| sheep         | 0.000 | cow          | 0.000 | elephant       | 0.014 |
| bear          | 0.000 | zebra        | 0.000 | giraffe        | 0.000 |
| backpack      | 0.000 | umbrella     | 0.000 | handbag        | 0.000 |
| tie           | 0.545 | suitcase     | 0.000 | frisbee        | 0.000 |
| skis          | 0.495 | snowboard    | 0.000 | sports ball    | 0.594 |
| kite          | 0.000 | baseball bat | 0.000 | baseball glove | 0.000 |
| skateboard    | 0.594 | surfboard    | 0.000 | tennis racket  | 0.495 |
| bottle        | 0.099 | wine glass   | 0.000 | cup            | 0.002 |
| fork          | 0.000 | knife        | 0.000 | spoon          | 0.198 |
| bowl          | 0.000 | banana       | 0.000 | apple          | 0.000 |
| sandwich      | 0.000 | orange       | 0.000 | broccoli       | 0.000 |
| carrot        | 0.000 | hot dog      | 0.000 | pizza          | 0.000 |
| donut         | 0.000 | cake         | 0.000 | chair          | 0.099 |
| couch         | 0.000 | potted plant | 0.000 | bed            | 0.000 |
| dining table  | 0.000 | toilet       | 0.000 | tv             | 0.792 |
| laptop        | 0.990 | mouse        | 0.594 | remote         | 0.000 |
| keyboard      | 0.737 | cell phone   | 0.000 | microwave      | 0.000 |
| oven          | 0.198 | toaster      | 0.000 | sink           | 0.297 |
| refrigerator  | 0.000 | book         | 0.000 | clock          | 0.172 |
| vase          | 0.000 | scissors     | 0.000 | teddy bear     | 0.000 |
| hair drier    | 0.000 | toothbrush   | 0.000 |                |       |


------- Similarity and Timing Metrics -------
Average Attack Time: 7.8397
Average L2 Norm: 8205.2500
Max Difference in Images: 8.0000
------------------------------------------------


[10/23 10:31:07 d2.evaluation.testing]: copypaste: Task: bbox
[10/23 10:31:07 d2.evaluation.testing]: copypaste: AP,AP50,AP75,APs,APm,APl
[10/23 10:31:07 d2.evaluation.testing]: copypaste: 0.1038,0.1848,0.0958,0.0749,0.0920,0.0387
OrderedDict({'bbox': {'AP': 0.10375703173765653, 'AP50': 0.18477494301154251, 'AP75': 0.09576442558048907, 'APs': 0.07489243329703814, 'APm': 0.0919764772340104, 'APl': 0.038675742574257425, 'AP-person': 0.7922772277227721, 'AP-bicycle': 0.0, 'AP-car': 0.0, 'AP-motorcycle': 0.594059405940594, 'AP-airplane': 0.0, 'AP-bus': 0.0, 'AP-train': 0.0, 'AP-truck': 0.0, 'AP-boat': 0.0, 'AP-traffic light': 0.0, 'AP-fire hydrant': 0.0, 'AP-stop sign': 0.0, 'AP-parking meter': 0.0, 'AP-bench': 0.0, 'AP-bird': 0.0, 'AP-cat': 0.0, 'AP-dog': 0.0, 'AP-horse': 0.0, 'AP-sheep': 0.0, 'AP-cow': 0.0, 'AP-elephant': 0.013501350135013501, 'AP-bear': 0.0, 'AP-zebra': 0.0, 'AP-giraffe': 0.0, 'AP-backpack': 0.0, 'AP-umbrella': 0.0, 'AP-handbag': 0.0, 'AP-tie': 0.5445544554455445, 'AP-suitcase': 0.0, 'AP-frisbee': 0.0, 'AP-skis': 0.49504950495049505, 'AP-snowboard': 0.0, 'AP-sports ball': 0.594059405940594, 'AP-kite': 0.0, 'AP-baseball bat': 0.0, 'AP-baseball glove': 0.0, 'AP-skateboard': 0.594059405940594, 'AP-surfboard': 0.0, 'AP-tennis racket': 0.49504950495049505, 'AP-bottle': 0.09900990099009901, 'AP-wine glass': 0.0, 'AP-cup': 0.0017070672584499828, 'AP-fork': 0.0, 'AP-knife': 0.0, 'AP-spoon': 0.19801980198019797, 'AP-bowl': 0.0, 'AP-banana': 0.0, 'AP-apple': 0.0, 'AP-sandwich': 0.0, 'AP-orange': 0.0, 'AP-broccoli': 0.0, 'AP-carrot': 0.0, 'AP-hot dog': 0.0, 'AP-pizza': 0.0, 'AP-donut': 0.0, 'AP-cake': 0.0, 'AP-chair': 0.09900990099009901, 'AP-couch': 0.0, 'AP-potted plant': 0.0, 'AP-bed': 0.0, 'AP-dining table': 0.0, 'AP-toilet': 0.0, 'AP-tv': 0.7920792079207921, 'AP-laptop': 0.9900990099009901, 'AP-mouse': 0.594059405940594, 'AP-remote': 0.0, 'AP-keyboard': 0.7370737073707371, 'AP-cell phone': 0.0, 'AP-microwave': 0.0, 'AP-oven': 0.19801980198019803, 'AP-toaster': 0.0, 'AP-sink': 0.297029702970297, 'AP-refrigerator': 0.0, 'AP-book': 0.0, 'AP-clock': 0.17184477068396492, 'AP-vase': 0.0, 'AP-scissors': 0.0, 'AP-teddy bear': 0.0, 'AP-hair drier': 0.0, 'AP-toothbrush': 0.0}})
---------------------------------------
Begin Slurm Epilog: Oct-23-2024 10:31:13
Job ID:        881239
Array Job ID:  _4294967294
User ID:       zyahn3
Account:       scs
Job name:      TOG_Plus_R50
Resources:     cpu=1,gres/gpu:a100=1,mem=128G,node=1
Rsrc Used:     cput=00:05:27,vmem=0,walltime=00:05:27,mem=4343912K,energy_used=0
Partition:     coc-gpu
Nodes:         atl1-1-03-007-33-0
---------------------------------------
